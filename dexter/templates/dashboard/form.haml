%%namespace(file="../helpers/bootstrap_wtf.haml", **{'import': '*'})
- from dexter.models import AnalysisNature

%form.activity-refine(action=url_for(request.url_rule.endpoint), method='GET')

  .panel.panel-default
    .panel-heading
      %h3.panel-title
        Refine

    .panel-body
      .form-group.analysis_nature(class_='hidden' if form.cluster_id.data else '')
        .btn-group(dataToggle='buttons')
          - for fld in form.analysis_nature_id:
            %label.btn.btn-default(class_='active' if fld.checked else '', title=fld.label.text)
              = fld()
              %i.fa(class_=AnalysisNature.ICONS.get(int(fld.data)))

      = form.cluster_id
      - if form.cluster_id.data:
        .form-group.cluster
          %label.control-label
            Topic
            %code
              &= form.cluster().fingerprint[0:8]
              %a.remove-cluster(href='#')
                %i.fa.fa-times

      = vertical_field(form.user_id)
      = vertical_field(form.country_id)
      = vertical_field(form.medium_id, class_='select2')
      .form-group
        = form.published_at.label()
        .input-group
          = form.published_at(class_='form-control use-daterangepicker')
          %span.input-group-btn
            %button.btn.btn-default(dataClear='input-group')
              %i.fa.fa-times
      .form-group
        = form.created_at.label()
        .input-group
          = form.created_at(class_='form-control use-daterangepicker')
          %span.input-group-btn
            %button.btn.btn-default(dataClear='input-group')
              %i.fa.fa-times

      -# need to inject the name of the person for the select2 field
      -# to setup correctly
      - person = form.source_person()
      - kwargs = {'data-text': person and person.name or ''}
      = vertical_field(form.source_person_id, **kwargs)

      .form-group
        = form.problems.label()
        .input-group
          - for fld in form.problems:
            - args = {'data-problem': fld.label.text}
            = field_input(fld, **args)
      .form-group
        .checkbox
          - kwargs = {"for": 'flagged'}
          %label(**kwargs)
            - args = {'data-problem': form.flagged.label.text}
            = form.flagged(**args)
            %i.fa.fa-flag.flag-set.article-flag
            = form.flagged.label.text

      .form-group.has-url
        .btn-group(dataToggle='buttons', dataCanUntoggle='1')
          - for fld in form.has_url:
            %label.btn.btn-default(class_='active' if fld.checked else '')
              = fld()
              &= fld.label.text
              - if fld.data == '1':
                %i.fa.fa-link

    .panel-footer
      .pull-right
        %button.btn.btn-default.download
          %i.fa.fa-download
          Download XLSX
      %input.btn.btn-success(type='Submit', value='Update')
